/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ofx;

import com.socket.Message;
import com.socket.SocketClient;
import java.awt.Color;
import java.awt.Component;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import static ofx.Ofx.tb;
import static ofx.loginn.username;

/**
 *
 * @author umang gupta
 */
public class SearchItemn extends javax.swing.JPanel {
public Home ui;
public SocketClient client;
public static DefaultListModel searchlist;
public static ArrayList<String> itemdetails;
    /**
     * Creates new form SearchItemn
     */
    public SearchItemn(Home ui) {
        this.ui=ui;
        initComponents();
        itemdetails=new ArrayList<String>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        itemname = new javax.swing.JTextField();
        searchbut = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        Box1 = new javax.swing.JCheckBox();
        Box2 = new javax.swing.JCheckBox();
        Box3 = new javax.swing.JCheckBox();
        Box4 = new javax.swing.JCheckBox();
        Box5 = new javax.swing.JCheckBox();
        Box6 = new javax.swing.JCheckBox();
        Buybut = new javax.swing.JButton();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ofx/images/teal-search-icon-32-x-32.gif"))); // NOI18N
        jLabel1.setText("<html>ItemName<br>(optional)</html>");

        searchbut.setText("Search");
        searchbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbutActionPerformed(evt);
            }
        });

        jList1.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        jList1.setModel((searchlist = new DefaultListModel()));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("Buy");
        jList1.setFixedCellHeight(90);
        jScrollPane1.setViewportView(jList1);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("<html>Search<br>Tags</html>");

        Box1.setText("Books");

        Box2.setText("Gadgets");

        Box3.setText("Formals");

        Box4.setText("Lab Practicals");

        Box5.setText("Hostels");

        Box6.setText("Miscellaneous");

        Buybut.setText("Buy");
        Buybut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuybutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Buybut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Box4)
                                    .addComponent(Box1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Box2)
                                    .addComponent(Box5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Box6)
                                    .addComponent(Box3)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(itemname, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchbut)))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(searchbut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemname, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Box1)
                        .addComponent(Box2))
                    .addComponent(Box3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Box6)
                    .addComponent(Box5)
                    .addComponent(Box4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Buybut))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbutActionPerformed
        // TODO add your handling code here:
         this.client=ui.client;
         searchlist.removeAllElements();
         itemdetails.clear();
            if(client!=null)
            {
             if(!username.equals(""))
               {
                view_field view = new view_field();
                 try {   
                     control_field ctrl = new control_field(view);
                 } catch (IOException ex) {
                     Logger.getLogger(Registern.class.getName()).log(Level.SEVERE, null, ex);
                 }
               }
                   else
               {
             JOptionPane.showMessageDialog(tb, "please login first");
               }
            }
               else
         {
             JOptionPane.showMessageDialog(tb, "connection failure");
         }
    }//GEN-LAST:event_searchbutActionPerformed

    private void BuybutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuybutActionPerformed
        // TODO add your handling code here:
         this.client=ui.client;
                       
            if(client!=null)
            {
                if(!username.equals(""))
                {
                    int index= jList1.getSelectedIndex();
                    String[] selected=itemdetails.get(index).split("<br>");
                    String[] buy=new String[1];
                    buy[0]=selected[0];
 
                client.send(new Message("buy", username,buy , selected[3]));     
                }         else
         {
             JOptionPane.showMessageDialog(tb, "please login first");
         }
            }
               else
         {
             JOptionPane.showMessageDialog(tb, "connection failure");
         }
    }//GEN-LAST:event_BuybutActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Box1;
    private javax.swing.JCheckBox Box2;
    private javax.swing.JCheckBox Box3;
    private javax.swing.JCheckBox Box4;
    private javax.swing.JCheckBox Box5;
    private javax.swing.JCheckBox Box6;
    private javax.swing.JButton Buybut;
    private javax.swing.JTextField itemname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchbut;
    // End of variables declaration//GEN-END:variables
 private class control_field {
    
     private view_field  view;

        public control_field( view_field viewnew) throws IOException {
            
            view=viewnew;
           //fetch fields
            String[] arr=new String[7];
            arr[0]=view.get_Itemname(); 
            String[] checked =Arrays.copyOf(view.get_Tags(), view.get_Tags().length);
            for(int i=1;i<7;i++)
                arr[i]=checked[i-1];
             for(int i=1;i<7;i++)
            {
              System.out.println(arr[i]);
            }
        //pass arguments
             
            client.send(new Message("searchitem", username, arr, "SERVER"));     
      
        }  
       
    }
   
    private class view_field {
    public ArrayList<JCheckBox> checkboxes;
        public String get_Itemname()
        {
            return itemname.getText();
        }
     public String[] get_Tags()
        {
            /*
           boolean[] arr=new boolean[6];//or   Boolean[] array = new Boolean[size];Arrays.fill(array, Boolean.FALSE); 
          */ checkboxes= new ArrayList<JCheckBox>();
          checkboxes.add(Box1);checkboxes.add(Box2);checkboxes.add(Box3);checkboxes.add(Box4);checkboxes.add(Box5);checkboxes.add(Box6);
          String[] arr=new String[6]; 
          Arrays.fill(arr,"0");
            for(int i=0;i<checkboxes.size();i++)
          {
              if(checkboxes.get(i).isSelected())
              {
                  arr[i]="1";
                  System.out.println((i+1)+"marked");
              }
          }
          return arr;
        }  
    }

}
